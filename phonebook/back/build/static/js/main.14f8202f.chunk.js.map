{"version":3,"sources":["services/contacts.js","app.js","index.js"],"names":["baseUrl","axios","get","then","response","data","nameObject","post","id","delete","updatedContact","put","Persons","props","namesToShow","PersonForm","onSubmit","addName","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Filter","placeholder","newSearch","handleSearchChange","Notification","message","className","ErrorNotification","error","App","useState","persons","setPersons","setNewName","setNewNumber","setNewSearch","setMessage","setError","useEffect","contactService","initialContacts","filter","person","name","toLowerCase","includes","map","key","number","onClick","window","confirm","setTimeout","catch","console","log","event","target","find","preventDefault","contact","returnedContact","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14f8202f.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst baseUrl = '/api/persons/'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\n\r\nconst add = (nameObject) => {\r\n    const request = axios.post(baseUrl , nameObject)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n}\r\n\r\nconst erase = (id) => {\r\n    const request = axios.delete(`${baseUrl}${id}`)\r\n    return request.then(response=>{\r\n        return response.data\r\n    })\r\n  }\r\nconst update = (id, updatedContact) => {\r\n    const request = axios.put(`${baseUrl}${id}`, updatedContact)\r\n    return request.then(response => {\r\n        return response.data\r\n    })\r\n  }\r\n\r\nexport default {getAll, add, erase, update }","import React, { useState, useEffect } from 'react'\r\nimport contactService from './services/contacts';\r\n\r\n\r\nconst Persons  = (props) => {\r\n  return (\r\n    <ul>\r\n        {props.namesToShow}\r\n   </ul>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addName}>\r\n        <div>\r\n          name: <input \r\n          value={props.newName}\r\n          onChange={props.handleNameChange}/>\r\n        </div>\r\n        <div>number: <input \r\n        value={props.newNumber}\r\n        onChange={props.handleNumberChange}/></div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n    </form>\r\n    \r\n  )\r\n}\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <div>\r\n        <input placeholder='search' value={props.newSearch} onChange={props.handleSearchChange}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notification = ({message}) => {\r\n  if(message === null ) {\r\n    return null\r\n  }else {\r\n    return (\r\n      <div className=\"notification\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst ErrorNotification = ({error}) => {\r\n  if(error === null ) {\r\n    return null\r\n  }else {\r\n    return (\r\n      <div className=\"error\">\r\n        {error}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [newSearch, setNewSearch] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  \r\n\r\n  useEffect(() => {\r\n    contactService\r\n    .getAll().then(initialContacts => {\r\n        setPersons(initialContacts)\r\n      })\r\n  }, [])\r\n\r\n  const addName = (event) => {\r\n    if(persons.find((name)=>{\r\n    return  name.name.toLowerCase() === newName.toLowerCase()\r\n    })){if(window.confirm(`${newName} is allready in the phonebook.Replace the old one with a new one ?`)){\r\n      event.preventDefault()\r\n      const contact =persons.find((name)=>{\r\n        return  name.name.toLowerCase() === newName.toLowerCase()\r\n        })\r\n        const updatedContact = { \r\n          name: newName,\r\n          number: newNumber\r\n          \r\n        }\r\n      contactService\r\n      .update(contact.id, updatedContact).then(returnedContact => {\r\n        setPersons(persons.map(person => person.id !== contact.id ? person : returnedContact))\r\n        setMessage(`Contact ${returnedContact.name} was updated`)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n      })\r\n      setNewName('')\r\n      setNewNumber('')\r\n    }else{\r\n      event.preventDefault()\r\n    }\r\n    } else {\r\n      event.preventDefault()\r\n    const nameObject = { \r\n      name: newName,\r\n      number: newNumber\r\n      \r\n    }\r\n    contactService\r\n    .add(nameObject).then(returnedContact => {\r\n      setPersons(persons.concat(returnedContact))\r\n      setNewName('')\r\n      setNewNumber('')\r\n      setMessage(`Contact ${returnedContact.name} was created`)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 3000)\r\n    } ).catch(error=>{\r\n      setError(error.response.data)\r\n      setTimeout(() => {\r\n        setError(null)\r\n      }, 3000)\r\n      console.log(error.response.data)\r\n    })\r\n  }\r\n    }\r\n    \r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n  const handleSearchChange = (event) => {\r\n    setNewSearch(event.target.value)\r\n    console.log(newSearch)\r\n    console.log(event.target.value)\r\n  }\r\n  const  search = persons.filter((person)=> {\r\n    return person.name.toLowerCase().includes(newSearch.toLowerCase())\r\n  })\r\n  \r\n  const namesToShow = search.map((name)=>{\r\n    const deleteContact =() => {\r\n      if (window.confirm(`Are you sure you want to delete ${name.name} `)) { \r\n      contactService\r\n      .erase(name.id).then(()=>{\r\n        setPersons(persons.filter(person => person.id !== name.id))\r\n        setError(`Contact ${name.name} was deleted`)\r\n      setTimeout(() => {\r\n        setError(null)\r\n      }, 3000)\r\n      }).catch(error => {\r\n        console.log(`Contact ${name.name} was already deleted`)\r\n        setError(`Contact ${name.name} was already deleted`)\r\n      })\r\n      \r\n      }\r\n    }\r\n    return <div key={name.name}>\r\n              <p>{name.name} {name.number}</p>\r\n              <button onClick={deleteContact}>delete {name.name}</button>\r\n            </div>\r\n          \r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification message={message} />\r\n      <ErrorNotification error={error} />\r\n      <Filter newSearch={newSearch} handleSearchChange={handleSearchChange}/>\r\n      <h1>add new</h1>\r\n      <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange}\r\n                  newNumber={newNumber} handleNumberChange={handleNumberChange}/>\r\n      <h1>Numbers</h1>\r\n      <Persons namesToShow={namesToShow}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}